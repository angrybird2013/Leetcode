class Solution:
    # @param A, a list of integers
    # @return an integer
    def product(self, A):
        p, n = 1, len(A)
        for i in range(n):
            p = p * A[i]
        if p > 0 or n == 1:
            return p
        else:
            p1, p2 = p, p
            i, j = 0, n-1
            while p1 < 0 and i < n:
                p1 = p1 / A[i]
                i += 1
            while p2 < 0 and j >= 0:
                p2 = p2 / A[j]
                j -= 1
            return max(p1, p2)
    
    def maxProduct(self, A):
        n = len(A)
        if n == 1:
            return A[0]
        for i in range(n):
            if A[i] == 0:
                if i == 0:
                    return max(0, self.maxProduct(A[1:]))
                elif i == n-1:
                    return max(0, self.product(A[:-1]))
                else:
                    return max(0, max(self.product(A[:i]), self.maxProduct(A[i+1:])))
        return self.product(A)
