class Solution:
    # @param s, a string
    # @return a list of strings
    def valid(self, s):
        n = len(s)
        if n == 1:
            return 0 <= int(s) < 10
        elif n == 2:
            return 10 <= int(s) < 100
        elif n == 3:
            return 100 <= int(s) < 256
        else:
            return False
    
    def ip(self, s, k):
        n = len(s)
        if k == 1:
            if self.valid(s):
                return [[s]]
            else:
                return []
        elif k > n or 3 * k < n:
            return []
        else:
            r = []
            for i in range(1, min(4, n)):
                if self.valid(s[:i]):
                    for t in self.ip(s[i:], k-1):
                        r += [[s[:i]] + t]
            if k == 4:
                addr = []
                for t in r:
                    addr += [".".join(t)]
                return addr
            else:
                return r
    
    def restoreIpAddresses(self, s):
        return self.ip(s, 4)
