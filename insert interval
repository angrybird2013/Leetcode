# Definition for an interval.
# class Interval:
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution:
    # @param intervals, a list of Intervals
    # @param newInterval, a Interval
    # @return a list of Interval
    def insert(self, intervals, newInterval):
        i, p = 0, newInterval
        while p and i < len(intervals):
            t = intervals[i]
            if t.end < p.start:
                i += 1
            elif p.end < t.start:
                intervals.insert(i, p)
                p = None
            elif t.start <= p.start and p.end <= t.end:
                p = None
            elif t.start <= p.start and t.end < p.end:
                t.end, p = p.end, t
                del intervals[i]
            elif p.start < t.start and p.end <= t.end:
                t.start = p.start
                p = None
            elif p.start < t.start and t.end < p.end:
                t.start, t.end, p = p.start, p.end, t
                del intervals[i]
        if p is not None:
            intervals += [p]
        return intervals
