class Solution:
    # @param prices, a list of integer
    # @return an integer
    def profit(self, prices):
        n, t, j = len(prices), [0, 0, 0], -1
        for i in range(n):
            if j < 0 or prices[i] < prices[j]:
                j = i
            elif prices[i] - prices[j] > t[2]:
                t = [j, i, prices[i] - prices[j]]
        return t
        
    def profitR(self, prices):
        n, t, j = len(prices), [0, 0, 0], -1
        for i in range(n):
            if j < 0 or prices[i] > prices[j]:
                j = i
            elif prices[i] - prices[j] < t[2]:
                t = [j, i, prices[i] - prices[j]]
        return t
    
    def maxProfit(self, prices):
        c = self.profit(prices)
        a, b = self.profit(prices[:c[0]+1]), self.profit(prices[c[1]:])
        t = c[2] + max(a[2], b[2])
        r = self.profitR(prices[c[0]:c[1]+1])
        a, b = self.profit(prices[:c[0]+r[0]+1]), self.profit(prices[c[0]+r[1]:])
        t = max(t, a[2] + b[2])
        return t
