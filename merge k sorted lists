# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    # @param a list of ListNode
    # @return a ListNode
    def merge(self, l1, l2):
        dummy = ListNode(0)
        l = dummy
        while l1 is not None and l2 is not None:
            if l1.val < l2.val:
                l.next = l1
                l1 = l1.next
            else:
                l.next = l2
                l2 = l2.next
            l = l.next
        if l1 is None:
            l.next = l2
        else:
            l.next = l1
        return dummy.next
            
    def mergeKLists(self, lists):
        n = len(lists)
        if n == 0:
            return None
        elif n == 1:
            return lists[0]
        else:
            l1, l2 = self.mergeKLists(lists[:n/2]), self.mergeKLists(lists[n/2:])
            return self.merge(l1, l2)
