class Solution:
    # @param num1, a string
    # @param num2, a string
    # @return a string
    def add(self, num1, num2):
        n1, n2 = len(num1), len(num2)
        if n1 < n2:
            return self.add(num2, num1)
        i, j, c = n1 - 1, n2 - 1, 0
        num = ""
        while j >= 0:
            v = int(num1[i]) + int(num2[j]) + c
            c = v / 10
            num = str(v % 10) + num
            i, j = i - 1, j - 1
        while i >= 0:
            v = int(num1[i]) + c
            c = v / 10
            num = str(v % 10) + num
            i -= 1
        if i < 0 and c > 0:
            num = str(c) + num
        return num
    
    def mul(self, num, k):
        n = len(num)
        if k == 0:
            return "0"
        elif k == 1:
            return num
        i, c = n - 1, 0
        r = ""
        while i >= 0:
            v = int(num[i]) * k + c
            c = v / 10
            r = str(v % 10) + r
            i -= 1
        if c > 0:
            r = str(c) + r
        return r
    
    def multiply(self, num1, num2):
        n1, n2 = len(num1), len(num2)
        if n1 < n2:
            return self.multiply(num2, num1)
        t, m = "0", 10 * [None]
        for i in range(n2):
            k = int(num2[n2-1-i])
            if m[k] is None:
                m[k] = self.mul(num1, k)
            t = self.add(t, m[k] + i * "0")
        return t
