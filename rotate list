# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    # @param head, a ListNode
    # @param k, an integer
    # @return a ListNode
    def rotateRight(self, head, k):
        if head is None or k == 0:
            return head
        n, t = 1, head
        while t.next is not None:
            n += 1
            t = t.next
        t.next, k = head, n - 1 - (k % n)
        t = head
        while k > 0:
            t = t.next
            k -= 1
        head = t.next
        t.next = None
        return head
