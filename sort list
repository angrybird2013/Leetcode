# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    # @param head, a ListNode
    # @return a ListNode
    def sortList(self, head):
        n, t = 0, head
        while t is not None:
            n, t = n + 1, t.next
        if n <= 1:
            return head
        k, t = n/2 - 1, head
        while k > 0:
            k, t = k - 1, t.next
        b = self.sortList(t.next)
        t.next = None
        a = self.sortList(head)
        h, t = None, None
        while a is not None or b is not None:
            if a is not None and b is not None:
                if a.val < b.val:
                    p = a
                    a = a.next
                else:
                    p = b
                    b = b.next
            elif a is None:
                p = b
                b = b.next
            elif b is None:
                p = a
                a = a.next
            if h is None:
                h, t = p, p
            else:
                t.next = p
                t = p
        t.next = None
        return h
