# Definition for a  binary tree node
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def order(self, root, level):
        if root.left is None and root.right is None:
            return [[root.val]]
        elif root.left is None:
            return [[root.val]] + self.order(root.right, level+1)
        elif root.right is None:
            return [[root.val]] + self.order(root.left, level+1)
        else:
            l, r = self.order(root.left, level+1), self.order(root.right, level+1)
            t, n, m = [[root.val]] + l, len(r), len(l)
            for i in range(1, n+1):
                if i > m:
                    t += [r[i-1]]
                elif (level+i) % 2 == 1:
                    t[i] = r[i-1] + t[i]
                else:
                    t[i] = t[i] + r[i-1]
            return t
    
    # @param root, a tree node
    # @return a list of lists of integers
    def zigzagLevelOrder(self, root):
        if root is None:
            return []
        else:
            return self.order(root, 0)
