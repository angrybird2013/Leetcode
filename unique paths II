class Solution:
    # @param obstacleGrid, a list of lists of integers
    # @return an integer
    def uniquePathsWithObstacles(self, obstacleGrid):
        m, n = len(obstacleGrid), len(obstacleGrid[0])
        d = m * [n * [0]]
        d[0][0] = 1
        for i in range(m):
            for j in range(n):
                if obstacleGrid[i][j] == 1:
                    d[i][j] = 0
                elif i == 0 and j == 0:
                    continue
                else:
                    t = 0
                    if i > 0:
                        t += d[i-1][j]
                    if j > 0:
                        t += d[i][j-1]
                    d[i][j] = t
        return d[m-1][n-1]
